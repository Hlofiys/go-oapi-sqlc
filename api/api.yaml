openapi: 3.0.1
info:
  title: BranchService
  version: v1
paths:
  /api/branches:
    get:
      tags:
        - Branches
      summary: Get all branches
      operationId: GetAllBranches
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Branch"
    post:
      tags:
        - Branches
      summary: Create a branch
      operationId: CreateBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BranchCreationDto"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
      security:
        - Bearer:
            - "role:Admin"
    delete:
      tags:
        - Branches
      summary: Delete branch by branchId
      operationId: DeleteBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BranchDeleteDto"
      responses:
        "204":
          description: Success
      security:
        - Bearer:
            - "role:Admin"
  /api/branches/{branchId}:
    get:
      tags:
        - Branches
      summary: Get branch by branchId
      operationId: GetBranchById
      parameters:
        - name: branchId
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
    patch:
      tags:
        - Branches
      summary: Update branch by branchId
      operationId: UpdateBranch
      parameters:
        - name: branchId
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBranchDto"
      security:
        - Bearer:
            - "role:Admin"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
  /api/branches/limit:
    get:
      tags:
        - Branches
      summary: Check for branch max users limit
      operationId: CheckBranchLimit
      parameters:
        - name: usersAmount
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int32
        - name: branchId
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
components:
  schemas:
    Branch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        maxUsers:
          type: integer
          format: int32
        currentUsers:
          type: integer
          format: int32
        groupIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    BranchCreationDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        maxUsers:
          type: integer
          format: int32
      additionalProperties: false
    BranchDeleteDto:
      type: object
      properties:
        branchIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    UpdateBranchDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
          default: ""
        maxUsers:
          type: integer
          format: int32
          nullable: false
          default: 0
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Specify the authorization token.
      scheme: bearer
      bearerFormat: JWT
